scale_fill_defenders(palette = "warm", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
ggtitle("Fig. B: Manually set fill colors")
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
ggtitle("Fig. B: Manually set fill colors")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none")
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none")
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
#geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(data=iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color=Species, shape=Species), size = 6, alpha = .8) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_defenders(discrete = TRUE, palette = "traffic light") +
theme_minimal()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm")
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +
geom_point(size = 10, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "cool gradient") +
theme_dark()
ggplot(iris, aes(Species, Sepal.Length, color = Sepal.Width)) +
geom_point(size = 6, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "trio") +
theme_linedraw()
ggplot(iris, aes(Species, Sepal.Length, color = Sepal.Width)) +
geom_point(size = 6, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "trio")
ggplot(iris, aes(Species, Sepal.Length, color = Sepal.Width)) +
geom_point(size = 6, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "trio") +
theme_linedraw()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +
geom_point(size = 10, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "cool gradient") +
theme_dark()
ggplot(iris, aes(Species, Sepal.Length, color = Sepal.Width)) +
geom_point(size = 6, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "trio") +
theme_linedraw()
ggplot(data=iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color=Species, shape=Species), size = 6, alpha = .8) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_defenders(discrete = TRUE, palette = "traffic light") +
theme_minimal()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_gray()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_void()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_test()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_test()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_test()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_test()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(avg_mpg, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Adjusted color comparison")
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_brewer(palette = "Pastel1") +
ggtitle("Adjusted color comparison")
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_defenders(palette = "warm", guide = "none") +
ggtitle("Adjusted color comparison")
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_defenders(palette = "classic", guide = "none") +
ggtitle("Adjusted color comparison")
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_defenders(palette = "classic", guide = "none") +
ggtitle("Defenders of Wildlife Classic Color Palette")
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_defenders(palette = "classic", guide = "none") +
ggtitle("Defenders of Wildlife Classic Color Palette") +
theme_set()
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_defenders(palette = "classic", guide = "none") +
ggtitle("Defenders of Wildlife Classic Color Palette") +
theme_bw()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +
geom_point(size = 10, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "cool gradient") +
theme_dark()
ggplot(iris, aes(Species, Sepal.Length, color = Sepal.Width)) +
geom_point(size = 6, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "trio") +
theme_linedraw()
ggplot(data=iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color=Species, shape=Species), size = 6, alpha = .8) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_defenders(discrete = TRUE, palette = "traffic light") +
theme_minimal()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_test()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_defenders(palette = "classic", guide = "none") +
ggtitle("Defenders of Wildlife Classic Color Palette") +
theme_bw()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +
geom_point(size = 10, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "cool gradient") +
theme_dark()
ggplot(iris, aes(Species, Sepal.Length, color = Sepal.Width)) +
geom_point(size = 6, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "trio") +
theme_linedraw()
ggplot(data=iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color=Species, shape=Species), size = 6, alpha = .8) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_defenders(discrete = TRUE, palette = "traffic light") +
theme_minimal()
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_test()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
geom_bar(stat = "identity", position = "dodge", color = "grey40") +
scale_fill_defenders(palette = "classic", guide = "none") +
ggtitle("Defenders of Wildlife Classic Color Palette") +
theme_bw()
install.packages("plotly")
library(plotly)
iris1 <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
iris1 <- ggplotly(iris1)
iris1
iris2 <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +
geom_point(size = 10, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "cool gradient") +
theme_dark()
iris2 <- ggplotly(iris2)
iris2
iris3 <- ggplot(iris, aes(Species, Sepal.Length, color = Sepal.Width)) +
geom_point(size = 6, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "trio") +
theme_linedraw()
iris3 <- ggplotly(iris3)
iris3
iris4 <- ggplot(data=iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(aes(color=Species, shape=Species), size = 6, alpha = .8) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width") +
scale_color_defenders(discrete = TRUE, palette = "traffic light") +
theme_minimal()
iris4 <- ggplotly(iris4)
iris4
Sys.setenv("plotly_username"="mlacey7")
Sys.setenv("plotly_api_key"="••••••••••")
api_create(p, filename = "plotlytest")
api_create(iris4, filename = "plotlytest")
Sys.setenv("plotly_username"="mlacey7")
Sys.setenv("plotly_api_key"="4xxpbuYmXYdxZIKNRFue")
api_create(iris4, filename = "plotlytest")
mtcars1 <- ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
mtcars1 <- ggplotly(mtcars1)
mtcars1
mtcars2 <- ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
scale_fill_defenders(palette = "natural", guide = "none") +
theme_test()
mtcars2 <- ggplotly(mtcars2)
mtcars2
iris1 <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
iris1 <- ggplotly(iris1)
iris1
iris1 <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
iris1
iris1
iris1 <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm") +
theme_classic()
iris1 <- ggplotly(iris1)
iris1
api_create(iris1, filename = "plotlytest")
hist(mtcars$mpg)
hist(mtcars$mpg) +
scale_fill_defenders(palette = "classic", guide = "none")
hist(mtcars$mpg) +
scale_color_defenders(discrete = TRUE, palette = "traffic light")
hist(mtcars$mpg) +
scale_color_defenders(discrete = FALSE, palette = "traffic light")
hist(mtcars$mpg,
scale_color_defenders(discrete = FALSE, palette = "traffic light"))
hist(mtcars$mpg,
scale_color_defenders(discrete = TRUE, palette = "traffic light"))
hist(mtcars$mpg,
scale_fill_defenders(palette = "classic", guide = "none"))
hist(mtcars$mpg, col = "classic")
hist(mtcars$mpg, col = scale_color_defenders(discrete = TRUE, palette = "traffic light"))
hist(mtcars$mpg, col = scale_color_defenders(discrete = FALSE, palette = "traffic light"))
hist(mtcars$mpg, col = scale_fill_defenders(palette = "classic", guide = "none"))
Defenders_colors()
hist(mtcars$mpg, col = "#ffcf00"))
hist(mtcars$mpg, col = "#ffcf00")
hist(mtcars$mpg, col = defenders_cols("red"))
hist(mtcars$mpg, col = defenders_pal("warm"))
hist(mtcars$mpg, col = defenders_cols("red"))
hist(mtcars$mpg, col = defenders_cols("orange"))
hist(mtcars$mpg, col = defenders_cols("blue"))
head(mtcars)
plot(wt, mpg, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
attach(mtcars)
plot(wt, mpg, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
plot(wt, mpg, main="Scatterplot Example",
col = defenders_pal("warm"),
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
plot(wt, mpg, main="Scatterplot Example",
col = defenders_cols("blue"),
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
scatterplot(mpg ~ wt | cyl, data=mtcars,
xlab="Weight of Car", ylab="Miles Per Gallon",
main="Enhanced Scatter Plot",
labels=row.names(mtcars))
library(car)
install.packages("car")
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_color_defenders(discrete = FALSE, palette = "trio") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
scale_fill_defenders(palette = "warm gradient", guide = "none") +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal()
library(car)
scatterplot(mpg ~ wt | cyl, data=mtcars,
xlab="Weight of Car", ylab="Miles Per Gallon",
main="Enhanced Scatter Plot",
labels=row.names(mtcars))
install.packages("hexbin")
library(hexbin)
x <- rnorm(1000)
y <- rnorm(1000)
bin<-hexbin(x, y, xbins=50)
plot(bin, main="Hexagonal Binning")
plot(bin, main="Hexagonal Binning", col = defenders_pal("warm"))
plot(bin, main="Hexagonal Binning", col = scale_fill_defenders(palette = "classic", guide = "none"))
plot(bin, main="Hexagonal Binning", scale_fill_defenders(palette = "classic", guide = "none"))
plot(bin, main="Hexagonal Binning", col = "red")
plot(bin, main="Hexagonal Binning", col = "red")
plot(bin, main="Hexagonal Binning", colorRampPalette("red"))
plot(bin, main="Hexagonal Binning")
hist(mtcars$mpg, col = defenders_cols("blue"))
install.packages("rgl")
library(rgl)
plot3d(wt, disp, mpg, col="red", size=3)
plot3d(wt, disp, mpg, col=defenders_cols("blue"), size=3)
plot3d(wt, disp, mpg, col=defenders_cols("blue"), size=10)
plot3d(wt, disp, mpg, col=defenders_cols("orange"), size=10)
plot3d(wt, disp, mpg, scale_color_defenders(discrete = TRUE, palette = "traffic light", size=10)
plot3d(wt, disp, mpg, scale_color_defenders(discrete = TRUE, palette = "traffic light"), size=10)
plot3d(wt, disp, mpg, scale_color_defenders(discrete = TRUE, palette = "traffic light"), size=10)
plot3d(wt, disp, mpg, col=defenders_pal("warm"), size=10)
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
(d <- ggplot(dsamp, aes(carat, price)) +
geom_point(aes(colour = clarity)))
d + scale_colour_brewer()
d + cale_color_defenders(discrete = TRUE, palette = "traffic light")
d + scale_color_defenders(discrete = TRUE, palette = "traffic light")
d <- ggplotly(d)
d
setwd("C:/Users/mlacey/CCI_retreat/leaflet")
# Import shapefiles from shared folder
NPS <- readOGR("NationalParks.shp")
library(defendersr)
library(leaflet)
library(rgdal)
library(rgeos)
N
# Import shapefiles from shared folder
NPS <- readOGR("NationalParks.shp")
NGL <- readOGR("NationalGrasslands.shp")
# Map out National Grasslands and National Park Service land
fed_land <- leaflet(NPS) %>%
setView(lng = -97.778253, lat=40.022912,zoom=4) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(data=NGL,weight=1, smoothFactor = 0.5, col=land_ownership_cols("National Grasslands"), fillOpacity = 0.75,
popup = NGL$GRASSLANDN) %>%
addPolygons(data=NPS,weight=2, smoothFactor = 0.5, col="#cabddc", fillOpacity = 0.75,
popup = NGL$GRASSLANDN)
fed_land # Print map
fed_land # Print map
setwd("C:/Users/mlacey/CCI-site")
setwd("C:/Users/mlacey/CCI-site")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none")
library(ggplot2)
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none")
devtools::build()
devtools::install()
library(defendersr)
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_cb(palette = "color blind 2", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_cb(palette = "color blind 1", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_cb(palette = "color blind 3", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_cb(palette = "color blind 2", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "main", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_defenders(palette = "natural", guide = "none")
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_cb(palette = "color blind 2", guide = "none")
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +
geom_point(size = 4, alpha = .6) +
scale_color_defenders(discrete = FALSE, palette = "cool gradient")
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_defenders("warm")
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_cd("color blind 3")
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_cb("color blind 3")
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_cb("color blind 3") +
theme_bw()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_cb("color blind 1") +
theme_bw()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_cb("color blind 2") +
theme_bw()
ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
geom_point(size = 4) +
scale_color_cb("color blind 3") +
theme_bw()
